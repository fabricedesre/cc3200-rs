extern crate gcc;
fn main() {
    gcc::Config::new()
        .compiler("arm-none-eabi-gcc")
        .define("gcc", None)
        .define("USE_FREERTOS", None)
        .include(".")
        .include("sdk")
        .include("sdk/inc")
        .include("sdk/driverlib")
        .include("sdk/example/common")
        .include("sdk/oslib")
        .include("sdk/third_party/FreeRTOS/source/include")
        .include("sdk/third_party/FreeRTOS/source/portable/GCC/ARM_CM4")
        .flag("-std=c99")
        .flag("-fno-exceptions")
        .flag("-mthumb")
        .flag("-mcpu=cortex-m4")
        .flag("-mfloat-abi=softfp")
        .flag("-mfpu=fpv4-sp-d16")
        .file("board.c")
        .file("StrPrintf.c")
        .file("freertos_rs.c")
        .file("sdk/driverlib/cpu.c")
        .file("sdk/driverlib/gpio.c")
        .file("sdk/driverlib/interrupt.c")
        .file("sdk/driverlib/i2c.c")
        .file("sdk/driverlib/pin.c")
        .file("sdk/driverlib/prcm.c")
        .file("sdk/driverlib/uart.c")
        .file("sdk/driverlib/utils.c")
        .file("sdk/example/common/gpio_if.c")
        .file("sdk/example/common/i2c_if.c")
        .file("sdk/example/common/uart_if.c")
        .file("sdk/third_party/FreeRTOS/source/croutine.c")
        .file("sdk/third_party/FreeRTOS/source/list.c")
        .file("sdk/third_party/FreeRTOS/source/queue.c")
        .file("sdk/third_party/FreeRTOS/source/tasks.c")
        .file("sdk/third_party/FreeRTOS/source/timers.c")
        .file("sdk/third_party/FreeRTOS/source/portable/GCC/ARM_CM4/port.c")
        .compile("libboard.a");

    println!("cargo:rustc-link-lib=board");
}
